{"version":3,"sources":["./src/app/sign-up/sign-up-routing.module.ts","./src/app/sign-up/sign-up.component.ts","./src/app/sign-up/sign-up.component.html","./src/app/sign-up/sign-up.module.ts"],"names":[],"mappings":"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","file":"src_app_sign-up_sign-up_module_ts.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { SignUpComponent } from './sign-up.component';\r\n\r\nimport { InviteSignUpComponent } from './invite-sign-up.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '', component: SignUpComponent, data: {\r\n      title: 'J U P I T A | Create Your Free Account',\r\n      metaTitle: 'Getting Started Is Fast Easy & Free',\r\n      metaDescription: 'Create your free account and get started with developer friendly APIs.'\r\n    }\r\n  },\r\n  {\r\n    path: ':email', component: InviteSignUpComponent, data: {\r\n      title: 'J U P I T A | Join Your Team'\r\n    }\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class SignUpRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\nimport { AuthService } from '../service/auth.service';\nimport { AlertService } from '../service/alert.service';\nimport { Router } from '@angular/router';\nimport { ScriptLoaderService, ScriptModel } from '../service/script-loader.service';\n\n@Component({\n  selector: 'app-sign-up',\n  templateUrl: './sign-up.component.html',\n  styleUrls: ['./sign-up.component.scss']\n})\nexport class SignUpComponent implements OnInit {\n\n  form: FormGroup;\n  loading = false;\n  submitted = false;\n  existEmailError:any;\n\n  constructor (\n    private formBuilder: FormBuilder,\n    private authService: AuthService,\n    private alertService: AlertService,\n    private router: Router,\n    private scriptLoader: ScriptLoaderService,\n    ) {\n    const particlesJSScript: ScriptModel = { name: 'particles.js', type: 'text/javascript', src: 'assets/js/particles.min.js' };\n    this.scriptLoader.load(particlesJSScript).subscribe(() => {\n      const body = <HTMLDivElement>document.body;\n      const script = document.createElement('script');\n      script.innerHTML = '';\n      script.src = \"../assets/js/particle-background.js\";\n      script.async = false;\n      script.defer = true;\n      body.appendChild(script);\n    });\n  }\n\n  ngOnInit(): void {\n    this.existEmailError='';\n    this.form = this.formBuilder.group({\n        email: ['', Validators.compose([Validators.required, Validators.email,Validators.pattern(this.authService.EMAIL_REGEXP)])],\n        fullName: ['', Validators.required],\n        passwordGroup: this.formBuilder.group({\n          password: ['', [Validators.required, Validators.pattern('^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^&*-]).{8,}$')]],\n          confirmPassword: ['']\n        }, {validator: this.checkPasswords })\n    });\n  }\n  \n  checkPasswords(group: FormGroup) { // here we have the 'passwords' group\n    let pass = group.get('password').value;\n    let confirmPass = group.get('confirmPassword').value;\n\n    return pass === confirmPass ? null : { notSame: true }     \n  }\n  \n  get f() { return this.form.controls; }\n  get pg() { return this.form.controls.passwordGroup as FormGroup;; }\n\n  onSubmit() {\n      this.submitted = true;\n      \n      this.alertService.clear();\n      \n      if (this.form.invalid) {\n          return;\n      }\n\n      this.authService.register(this.form.value)\n      .pipe(first())\n      .subscribe({\n          next: () => {\n              // this.alertService.success('Registration successful, please verify your email address to login.', { keepAfterRouteChange: true, autoClose: true });\n              this.router.navigate(['/resend-verification-email/'+this.form.value.email]);\n          },\n          error: error => {\n              // this.alertService.error(this.alertService.AlertMessages.EmailAlreadyExists, {autoDismiss: false});\n              // this.loading = false;\n            this.existEmailError=this.alertService.AlertMessages.EmailAlreadyExists;\n          }\n\n      });\n  }\n\n}\n","<div class=\"partical-bg-wrap\">\r\n    <div id=\"particles-js\">\r\n    </div>\r\n</div>\r\n<div class=\"container\">\r\n    <div class=\"align mt-9\">\r\n        <a class=\"navbar-brand mr-0\" href=\"/\"><img class=\"img-fluid\" alt=\"J U P I T A\" width=\"108\" height=\"60\" src=\"./../../../assets/images/Jupita.png\"></a>\r\n    </div>\r\n    <div class=\"row justify-content-center form-panel\">\r\n        <div class=\"col-md-7 col-md-offset-5 col-lg-4 col-lg-offset-4 col-xl-4 col-xl-offset-8  col-sm-8 col-sm-offset-2\">\r\n            <label class=\"add-label \">Create your free \r\n                account and get started with developer friendly APIs</label>\r\n            <small class=\"d-block\">\r\n                Already a user? Sign in\r\n                <strong><a href=\"/sign-in\" class=\"link-text\">here</a></strong>\r\n            </small>\r\n            <form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\" class=\"form-horizontal mt-5\" method=\"post\" action=\"#\">\r\n\r\n                <div class=\"form-group\">\r\n                    <div class=\"col-sm-12\">\r\n                        <label for=\"email\" class=\"control-label\">Email</label>\r\n                    </div>\r\n                    <div class=\"col-sm-12\">\r\n                        <div class=\"input-group\">\r\n                            <input formControlName=\"email\" type=\"text\" autocomplete=\"email\" class=\"form-control\" name=\"email\" id=\"email\" [ngClass]=\"{ 'is-invalid': submitted && f.email.errors }\">\r\n                            <div *ngIf=\"submitted && f.email.errors\" class=\"invalid-feedback\">\r\n                                <div *ngIf=\"f.email.errors.required\">Email is required</div>\r\n                                <div *ngIf=\"f.email.errors.email || f.email.errors.pattern\">Please enter a valid email address</div>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <div class=\"col-sm-12\">\r\n                        <label for=\"username\" class=\"control-label\">Full name</label>\r\n                    </div>\r\n                    <div class=\"col-sm-12\">\r\n                        <div class=\"input-group\">\r\n                            <input formControlName=\"fullName\" type=\"text\" class=\"form-control\" name=\"fullName\" id=\"fullName\" [ngClass]=\"{ 'is-invalid': submitted && f.fullName.errors }\">\r\n                            <div *ngIf=\"submitted && f.fullName.errors\" class=\"invalid-feedback\">\r\n                                <div *ngIf=\"f.fullName.errors.required\">Full name is required</div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div formGroupName=\"passwordGroup\">\r\n                    <div class=\"form-group\">\r\n                        <div class=\"col-sm-12\">\r\n                            <label for=\"password\" class=\"control-label\">Password</label>\r\n                        </div>\r\n                        <div class=\"col-sm-12\">\r\n                            <div class=\"input-group\">\r\n                                <input formControlName=\"password\" type=\"password\" class=\"form-control\" name=\"password\" autocomplete=\"new-password\" id=\"new-password\" [ngClass]=\"{ 'is-invalid': submitted && pg.controls.password.errors }\">\r\n                                <div *ngIf=\"submitted && pg.controls.password.errors\" class=\"invalid-feedback\">\r\n                                    <div *ngIf=\"pg.controls.password.errors.required\">Password is required</div>\r\n                                    <div class=\"error-feedack\" *ngIf=\"pg.controls.password.errors.pattern\">Your password must contain both uppercase and lowercase letters, a number, a symbol, and min of 8 characters</div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <div class=\"col-sm-12\">\r\n                            <label for=\"confirm\" class=\"control-label\">Confirm password</label>\r\n                        </div>\r\n                        <div class=\"col-sm-12\">\r\n                            <div class=\"input-group\">\r\n                                <input formControlName=\"confirmPassword\" type=\"password\" class=\"form-control\" name=\"confirm\" id=\"confirm\" [ngClass]=\"{ 'is-invalid': submitted && pg.errors }\">\r\n                                <div *ngIf=\"submitted\" class=\"invalid-feedback\">\r\n                                    <div *ngIf=\"pg.errors\">Passwords do not match</div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"form-group pt-3\">\r\n                    <div class=\"col-sm-12\">\r\n                        <button class=\"custom-btn btn-light btn-lg btn-block login-button create-button\">Create\r\n                            Account</button>\r\n                        <div *ngIf=\"existEmailError\" class=\"server-error\">{{existEmailError}}</div>\r\n                    </div>\r\n                </div>\r\n\r\n            </form>\r\n\r\n        </div>\r\n    </div>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { SignUpRoutingModule } from './sign-up-routing.module';\r\nimport { SignUpComponent } from './sign-up.component';\r\nimport { InviteSignUpComponent } from './invite-sign-up.component';\r\n\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [SignUpComponent,InviteSignUpComponent],\r\n  imports: [\r\n    CommonModule,\r\n    SignUpRoutingModule,\r\n    ReactiveFormsModule\r\n  ]\r\n})\r\nexport class SignUpModule { }\r\n"],"sourceRoot":"webpack:///"}